diff --git a/oak_containers/launcher/src/qemu.rs b/oak_containers/launcher/src/qemu.rs
index d28f993f9..824137a8d 100644
--- oak_containers/launcher/src/qemu.rs
+++ oak_containers/launcher/src/qemu.rs
@@ -92,6 +92,10 @@ pub struct Params {
     /// SevSnp, or Tdx (TDX is unimplemented yet)
     #[arg(long, required = false, value_enum, default_value_t = VmType::Default)]
     pub vm_type: VmType,
+
+    /// Forward message from VM to launcher running on host.
+    #[arg(long, required = false, default_value_t = 8889)]
+    pub hats_launcher_port: u16,
 }
 
 impl Params {
@@ -112,6 +116,7 @@ impl Params {
             virtio_guest_cid: None,
             pci_passthrough: None,
             vm_type: VmType::Default,
+            hats_launcher_port: 8889,
         }
     }
 }
@@ -236,6 +241,8 @@ impl Qemu {
             format!(
                 "hostfwd=tcp:{host_address}:{host_orchestrator_proxy_port}-{vm_address}:{vm_orchestrator_port}"
             ),
+            // Route traffic from host to HATs launcher service.
+            format!("guestfwd=tcp:10.0.2.100:8889-cmd:nc {host_address} {}", params.hats_launcher_port),
         ];
         if let Some(host_proxy_port) = host_proxy_port {
             let vm_port = crate::VM_LOCAL_PORT;
@@ -276,7 +283,7 @@ impl Qemu {
             "brd.rd_nr=1".to_string(),
             format!("brd.rd_size={ramdrive_size}"),
             "brd.max_part=1".to_string(),
-            format!("ip={vm_address}:::255.255.255.0::eth0:off"),
+            format!("ip={vm_address}:::255.255.255.0::enp0s1:off"),
             "loglevel=7".to_string(),
             "--".to_string(),
             format!("--launcher-addr=vsock://{VMADDR_CID_HOST}:{launcher_service_port}"),
