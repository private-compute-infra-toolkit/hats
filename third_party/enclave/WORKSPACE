workspace(name = "enclave")

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(
    edition = "2021",
    versions = [
        "1.76.0",
        "nightly/2024-02-01",
    ],
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies(bootstrap = True)

load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_repository")

crates_repository(
    name = "enclave_crate_index",
    cargo_lockfile = "//:Cargo.enclave-bazel.lock",
    lockfile = "//:cargo-enclave-bazel-lock.json",
    packages = {
        "hex": crate.spec(version = "*"),
        "static_assertions": crate.spec(version = "*"),
        "aes-gcm": crate.spec(
            default_features = False,
            features = ["aes"],
            version = "0.10.3",
        ),
        "hkdf": crate.spec(
            default_features = False,
            version = "0.12.3",
        ),
        "p256": crate.spec(
            default_features = False,
            features = [
                "alloc",
                "arithmetic",
                "ecdsa-core",
                "ecdsa",
                "pkcs8",
            ],
            version = "0.13.2",
        ),
        "ecdsa": crate.spec(
            default_features = False,
            features = [
                "der",
                "pkcs8",
                "signing",
                "der",
                "pem",
                "pkcs8",
            ],
            version = "0.16.6",
        ),
        "pkcs8": crate.spec(
            default_features = False,
            version = "0.10.2",
        ),
        "primeorder": crate.spec(
            default_features = False,
            version = "0.13.2",
        ),
        "sha2": crate.spec(
            default_features = False,
            version = "0.10.8",
        ),
        "rand_chacha": crate.spec(
            default_features = False,
            version = "0.3.1",
        ),
        "rand_core": crate.spec(
            default_features = False,
            features = ["getrandom"],
            version = "0.6.4",
        ),
        "aead": crate.spec(
            default_features = False,
            features = ["alloc"],
            version = "0.5.2",
        ),
    },
)

load("@enclave_crate_index//:defs.bzl", enclave_crate_repositories = "crate_repositories")

enclave_crate_repositories()
