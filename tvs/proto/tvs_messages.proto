// Copyright 2024 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package privacy_sandbox.tvs;

message InitSessionRequest {
  // Contains client ephemeral public key.
  bytes client_message = 1;
}

// TODO(alwabel): define the unencrypted version.
// Encrypted version of VerifyReportRequest.
message VerifyReportRequestEncrypted {
  // Contains attestation report
  bytes client_message = 1;
}

message AttestReportRequest {
  oneof request {
    // Initiate NK handshake.
    InitSessionRequest init_session_request = 1;
    VerifyReportRequestEncrypted verify_report_request = 2;
  }
}

message InitSessionResponse {
  // Contains TVS ephemeral public key.
  bytes response_for_client = 1;
}

// TODO(alwabel): define the unencrypted version.
// Encrypted version of VerifyReportRequest
message VerifyReportResponseEncrypted {
  bytes response_for_client = 1;
}

message AttestReportResponse {
  oneof response {
    // NK handshake response.
    InitSessionResponse init_session_response = 1;
    VerifyReportResponseEncrypted verify_report_response = 2;
  }
}

message OpaqueMessage {
  bytes binary_message = 1;
}
