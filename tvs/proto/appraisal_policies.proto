// Copyright 2024 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package privacy_sandbox.tvs;

import "proto/attestation/reference_value.proto";
import "proto/attestation/tcb_version.proto";

message AppraisalPolicies {
  repeated AppraisalPolicy policies = 1;
}

message AppraisalPolicy {
  Measurement measurement = 1;
  repeated Signature signature = 2;
}

message Signature {
  // Signature is in hex format.
  string signature = 1;
  // When multiple signatures, for identifying the signer and therefore which
  // verifying key to use
  string signer = 2;
}

message AmdSev {
  // Sha384 digest of stage0 is in hex string format.
  string sha384 = 1;
  // Minimum accepted versions of all TCB components.
  oak.attestation.v1.TcbVersion min_tcb_version = 2;
}

message Stage0Measurement {
  oneof type {
    AmdSev amd_sev = 1;
    oak.attestation.v1.InsecureReferenceValues insecure = 2;
  }
}

message Measurement {
  Stage0Measurement stage0_measurement = 1;
  // Sha256 digests are in hex string format.
  string kernel_image_sha256 = 2;
  string kernel_setup_data_sha256 = 3;
  string init_ram_fs_sha256 = 4;
  string memory_map_sha256 = 5;
  string acpi_table_sha256 = 6;
  string kernel_cmd_line_regex = 7;
  string system_image_sha256 = 8;
  string container_binary_sha256 = 9;
}
